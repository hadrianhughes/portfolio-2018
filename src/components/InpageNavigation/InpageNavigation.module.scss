@import '../../styles/settings.scss';
@import '../../styles/tools.scss';

$tileSize: 120px;
$tileSize--small: 150px;
$tileSize--large: 180px;
$tileSize--xlarge: 250px;
$hover_offset: 10px;

.root {
  @include t-clearfix;

  display: inline-block;
  width: calc((#{$tileSize} * 2) + #{t-spacing(medium)});

  @include t-respond-to-min(xsmall) {
    width: calc((#{$tileSize--small} * 2) + #{t-spacing(medium)});
  }

  @include t-respond-to-min(small) {
    width: calc((#{$tileSize--large} * 2) + #{t-spacing(medium)});
  }

  @include t-respond-to-min(medium) {
    width: calc((#{$tileSize--xlarge} * 2) + #{t-spacing(medium)});
  }

  @include t-respond-to-min(large) {
    width: calc((#{$tileSize--xlarge} * 2) + #{t-spacing(large)});
  }

  @include t-landscape {
    width: auto;
  }
}

.item {
  display: block;
  float: left;
  height: t-rem($tileSize);
  margin-bottom: t-spacing(medium);
  opacity: 0;
  position: relative;
  top: 0;
  transition: top .2s;
  width: t-rem($tileSize);

  @include t-respond-to-min(xsmall) {
    height: t-rem($tileSize--small);
    width: t-rem($tileSize--small);
  }

  @include t-respond-to-min(small) {
    height: t-rem($tileSize--large);
    width: t-rem($tileSize--large);

    @include t-landscape {
      height: t-rem($tileSize);
      width: t-rem($tileSize);
    }
  }

  @include t-respond-to-min(medium) {
    height: t-rem($tileSize--xlarge);
    width: t-rem($tileSize--xlarge);

    @include t-landscape {
      height: t-rem($tileSize);
      width: t-rem($tileSize);
    }
  }

  @include t-respond-to-min(large) {
    height: t-rem($tileSize--xlarge);
    margin-bottom: t-spacing(large);
    width: t-rem($tileSize--xlarge);

    @include t-landscape {
      height: t-rem($tileSize--large);
      width: t-rem($tileSize--large);
    }
  }

  @include t-respond-to-min(xlarge) {
    height: t-rem($tileSize--xlarge);
    width: t-rem($tileSize--xlarge);
  }

  @include t-portrait {
    &:nth-child(odd) {
      margin-right: t-spacing(medium);
  
      @include t-respond-to-min(large) {
        margin-right: t-spacing(large);
      }
    }
  }

  @include t-landscape {
    &:last-child {
      margin-right: 0;
    }

    margin-right: 1rem;

    @include t-respond-to-min(large) {
      margin-right: t-spacing(medium);
    }
  }

  &:hover {
    position: relative;
    top: -#{$hover_offset};

    .itemImage::after {
      opacity: 1;
    }

    .itemLink {
      border: 1px solid t-color(grey);
    }

    .icon_skills .itemLink {
      border: 1px solid t-color(orange);
    }
  }
}

.itemLink {
  background-color: t-color(light-grey);
  border-radius: 100%;
  display: block;
  height: 100%;
  padding: t-spacing(small);
  text-decoration: none;

  @include t-respond-to-min(small) {
    padding: t-spacing(medium);

    @include t-landscape {
      padding: t-spacing(small);
    }
  }

  @include t-respond-to-min(xlarge) {
    padding: t-spacing(medium);
  }
}

.itemImageWrapper {
  box-sizing: border-box;
  height: 70%;
  padding-bottom: t-spacing(xsmall);
}

.itemImage,
.itemImage::after {
  background-position: center center;
  background-repeat: no-repeat;
  height: 100%;
}

.itemImage {
  margin: 0 auto;
  position: relative;
  width: 50%;

  &::after {
    content: '';
    left: 0;
    opacity: 0;
    position: absolute;
    top: 0;
    transition: opacity .2s;
    width: 100%;
  }

  .icon_about & {
    background-image: url('/icons/about.svg');

    &::after {
      background-image: url('/icons/about_blue.svg');
    }
  }

  .icon_skills & {
    background-image: url('/icons/skills.svg');

    &::after {
      background-image: url('/icons/skills_orange.svg');
    }
  }

  .icon_canvas & {
    background-image: url('/icons/canvas.svg');

    &::after {
      background-image: url('/icons/canvas_pink.svg');
    }
  }

  .icon_github & {
    background-image: url('/icons/github.svg');

    &::after {
      background-image: url('/icons/github_black.svg');
    }
  }
}

.itemLabel {
  color: t-color(dark-grey);
  font-size: 0.8rem;
  height: 20%;
  text-align: center;
  width: 100%;

  @include t-respond-to-min(small) {
    @include t-portrait {
      font-size: t-font-size(medium);
    }
  }

  @include t-respond-to-min(medium) {
    font-size: 0.8rem;

    @include t-portrait {
      font-size: t-font-size(large);
    }
  }

  @include t-respond-to-min(large) {
    font-size: t-font-size(medium);

    @include t-portrait {
      font-size: t-font-size(large);
    }
  }

  @include t-respond-to-min(xlarge) {
    font-size: t-font-size(large);
  }
}
